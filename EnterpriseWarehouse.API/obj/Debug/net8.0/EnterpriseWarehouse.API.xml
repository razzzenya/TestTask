<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EnterpriseWarehouse.API</name>
    </assembly>
    <members>
        <member name="T:EnterpriseWarehouse.API.Controllers.CellController">
            <summary>
            Контроллер для управления ячейками склада.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.CellController.#ctor(EnterpriseWarehouse.API.Services.IEntityService{EnterpriseWarehouse.API.DTO.CellDTO,EnterpriseWarehouse.API.DTO.CellCreateDTO})">
            <summary>
            Контроллер для управления ячейками склада.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.CellController.Get">
            <summary>
            Возвращает список всех ячеек склада.
            </summary>
            <returns>Коллекция объектов <see cref="T:EnterpriseWarehouse.API.DTO.CellDTO"/>.</returns>
            <response code="200">Список ячеек успешно возвращён.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.CellController.Get(System.Int32)">
            <summary>
            Получает информацию о ячейке склада по её идентификатору.
            </summary>
            <param name="id">Идентификатор ячейки.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.CellDTO"/>, представляющий ячейку.</returns>
            <response code="200">Ячейка найдена и информация успешно возвращена.</response>
            <response code="404">Ячейка с указанным идентификатором не найдена.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.CellController.Post(EnterpriseWarehouse.API.DTO.CellCreateDTO)">
            <summary>
            Добавляет новую ячейку на склад.
            </summary>
            <param name="newCell">Объект <see cref="T:EnterpriseWarehouse.API.DTO.CellCreateDTO"/>, содержащий информацию о новой ячейке.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.CellDTO"/>, представляющий добавленную ячейку.</returns>
            <response code="200">Ячейка успешно добавлена.</response>
            <response code="400">Ошибка при добавлении ячейки.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.CellController.Put(System.Int32,EnterpriseWarehouse.API.DTO.CellCreateDTO)">
            <summary>
            Обновляет информацию о существующей ячейке.
            </summary>
            <param name="id">Идентификатор ячейки.</param>
            <param name="newCell">Объект <see cref="T:EnterpriseWarehouse.API.DTO.CellCreateDTO"/>, содержащий обновлённые данные ячейки.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.CellDTO"/>, представляющий обновлённую ячейку.</returns>
            <response code="200">Ячейка успешно обновлена.</response>
            <response code="404">Ячейка с указанным идентификатором не найдена.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.CellController.Delete(System.Int32)">
            <summary>
            Удаляет ячейку склада по её идентификатору.
            </summary>
            <param name="id">Идентификатор ячейки.</param>
            <returns>Результат операции удаления.</returns>
            <response code="200">Ячейка успешно удалена.</response>
            <response code="404">Ячейка с указанным идентификатором не найдена.</response>
        </member>
        <member name="T:EnterpriseWarehouse.API.Controllers.OrganizationController">
            <summary>
            Контроллер для управления организациями.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.OrganizationController.#ctor(EnterpriseWarehouse.API.Services.IEntityService{EnterpriseWarehouse.API.DTO.OrganizationDTO,EnterpriseWarehouse.API.DTO.OrganizationCreateDTO})">
            <summary>
            Контроллер для управления организациями.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.OrganizationController.Get">
            <summary>
            Возвращает список всех организаций.
            </summary>
            <returns>Коллекция объектов <see cref="T:EnterpriseWarehouse.API.DTO.OrganizationDTO"/>.</returns>
            <response code="200">Список организаций успешно возвращён.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.OrganizationController.Get(System.Int32)">
            <summary>
            Возвращает информацию об организации по её идентификатору.
            </summary>
            <param name="id">Идентификатор организации.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.OrganizationDTO"/>, представляющий организацию.</returns>
            <response code="200">Организация найдена и информация успешно возвращена.</response>
            <response code="404">Организация с указанным идентификатором не найдена.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.OrganizationController.Post(EnterpriseWarehouse.API.DTO.OrganizationCreateDTO)">
            <summary>
            Добавляет новую организацию.
            </summary>
            <param name="newOrganization">Объект <see cref="T:EnterpriseWarehouse.API.DTO.OrganizationCreateDTO"/>, содержащий данные новой организации.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.OrganizationDTO"/>, представляющий добавленную организацию.</returns>
            <response code="200">Организация успешно добавлена.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.OrganizationController.Put(System.Int32,EnterpriseWarehouse.API.DTO.OrganizationCreateDTO)">
            <summary>
            Обновляет существующую организацию.
            </summary>
            <param name="id">Идентификатор обновляемой организации.</param>
            <param name="newOrganization">Объект <see cref="T:EnterpriseWarehouse.API.DTO.OrganizationCreateDTO"/>, содержащий обновлённые данные организации.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.OrganizationDTO"/>, представляющий обновлённую организацию.</returns>
            <response code="200">Организация успешно обновлена.</response>
            <response code="404">Организация с указанным идентификатором не найдена.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.OrganizationController.Delete(System.Int32)">
            <summary>
            Удаляет организацию по её идентификатору.
            </summary>
            <param name="id">Идентификатор организации для удаления.</param>
            <returns>Результат операции удаления.</returns>
            <response code="200">Организация успешно удалена.</response>
            <response code="404">Организация с указанным идентификатором не найдена.</response>
        </member>
        <member name="T:EnterpriseWarehouse.API.Controllers.ProductController">
            <summary>
            Контроллер для управления товарами.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.ProductController.#ctor(EnterpriseWarehouse.API.Services.IEntityService{EnterpriseWarehouse.API.DTO.ProductDTO,EnterpriseWarehouse.API.DTO.ProductCreateDTO})">
            <summary>
            Контроллер для управления товарами.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.ProductController.Get">
            <summary>
            Возвращает список всех товаров.
            </summary>
            <returns>Коллекция объектов <see cref="T:EnterpriseWarehouse.API.DTO.ProductDTO"/>.</returns>
            <response code="200">Список товаров успешно возвращён.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.ProductController.Get(System.Int32)">
            <summary>
            Возвращает информацию о товаре по его идентификатору.
            </summary>
            <param name="id">Идентификатор товара.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.ProductDTO"/>, представляющий товар.</returns>
            <response code="200">Товар найден и информация успешно возвращена.</response>
            <response code="404">Товар с указанным идентификатором не найден.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.ProductController.Post(EnterpriseWarehouse.API.DTO.ProductCreateDTO)">
            <summary>
            Добавляет новый товар.
            </summary>
            <param name="newProduct">Объект <see cref="T:EnterpriseWarehouse.API.DTO.ProductCreateDTO"/>, содержащий информацию о новом товаре.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.ProductDTO"/>, представляющий добавленный товар.</returns>
            <response code="200">Товар успешно добавлен.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.ProductController.Put(System.Int32,EnterpriseWarehouse.API.DTO.ProductCreateDTO)">
            <summary>
            Обновляет информацию о существующем товаре.
            </summary>
            <param name="id">Идентификатор товара.</param>
            <param name="newProduct">Объект <see cref="T:EnterpriseWarehouse.API.DTO.ProductCreateDTO"/>, содержащий обновлённые данные товара.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.ProductDTO"/>, представляющий обновлённый товар.</returns>
            <response code="200">Товар успешно обновлён.</response>
            <response code="404">Товар с указанным идентификатором не найден.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.ProductController.Delete(System.Int32)">
            <summary>
            Удаляет товар по его идентификатору.
            </summary>
            <param name="id">Идентификатор товара.</param>
            <returns>Результат операции удаления.</returns>
            <response code="200">Товар успешно удалён.</response>
            <response code="404">Товар с указанным идентификатором не найден.</response>
        </member>
        <member name="T:EnterpriseWarehouse.API.Controllers.QueryController">
            <summary>
            Контроллер для выполнения аналитических запросов.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.#ctor(EnterpriseWarehouse.API.Services.IQueryService)">
            <summary>
            Контроллер для выполнения аналитических запросов.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.GetAllProductsSortedByName">
            <summary>
            Получает список всех продуктов, отсортированных по названию.
            </summary>
            <returns>Список продуктов, отсортированных по названию.</returns>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.GetProductsRecieveOnDate(System.String,System.DateTime)">
            <summary>
            Получает список продуктов, полученных указанной организацией на заданную дату.
            </summary>
            <param name="name">Название организации.</param>
            <param name="date">Дата поставки.</param>
            <returns>Список продуктов, полученных на заданную дату.</returns>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.GetCurrentWarehouseState">
            <summary>
            Получает текущее состояние склада, включая информацию о ячейках.
            </summary>
            <returns>Список всех ячеек на складе.</returns>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.GetMaxSuppliesOrganizations(System.DateTime,System.DateTime)">
            <summary>
            Получает список организаций с максимальным количеством поставок за указанный период.
            </summary>
            <param name="startDate">Начальная дата периода.</param>
            <param name="endDate">Конечная дата периода.</param>
            <returns>Список организаций с максимальной поставкой.</returns>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.GetFiveMaxQuantityProducts">
            <summary>
            Получает пять продуктов с максимальном количеством на складе.
            </summary>
            <returns>Список продуктов с их количеством на складе.</returns>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.GetQuantityProductSupplyToOrganiztions">
            <summary>
            Получает количество поставок продуктов для каждой организации.
            </summary>
            <returns>Список продуктов и количество их поставок по организациям.</returns>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.GetNearestOrganizations">
            <summary>
            Получает сведения о ближайших организациях к каждой организации.
            </summary>
            <returns>Список организаций и близжайшие к ним.</returns>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.GetTop5OrganizationsByArea">
            <summary>
            Получает топ организаций с наибольшей площадью.
            </summary>
            <returns>Список организаций с их площадью.</returns>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.QueryController.GetMostRemoteOrganizations">
            <summary>
            Получает информацию об организациях, наиболее удаленных от остальных организаций.
            </summary>
            <returns>Список организаций с их суммарным расстоянием до остальных организаций.</returns>
        </member>
        <member name="T:EnterpriseWarehouse.API.Controllers.SupplyController">
            <summary>
            Контроллер для управления поставками.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.SupplyController.#ctor(EnterpriseWarehouse.API.Services.IEntityService{EnterpriseWarehouse.API.DTO.SupplyDTO,EnterpriseWarehouse.API.DTO.SupplyCreateDTO})">
            <summary>
            Контроллер для управления поставками.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.SupplyController.Get">
            <summary>
            Возвращает список всех поставок.
            </summary>
            <returns>Коллекция объектов <see cref="T:EnterpriseWarehouse.API.DTO.SupplyDTO"/>.</returns>
            <response code="200">Список поставок успешно возвращён.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.SupplyController.Get(System.Int32)">
            <summary>
            Получает информацию о поставке по её идентификатору.
            </summary>
            <param name="id">Идентификатор поставки.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.SupplyDTO"/>, представляющий поставку.</returns>
            <response code="200">Поставка найдена и информация успешно возвращена.</response>
            <response code="404">Поставка с указанным идентификатором не найдена.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.SupplyController.Post(EnterpriseWarehouse.API.DTO.SupplyCreateDTO)">
            <summary>
            Добавляет новую поставку.
            </summary>
            <param name="newSupply">Объект <see cref="T:EnterpriseWarehouse.API.DTO.SupplyCreateDTO"/>, содержащий информацию о новой поставке.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.SupplyDTO"/>, представляющий добавленную поставку.</returns>
            <response code="200">Поставка успешно добавлена.</response>
            <response code="400">Ошибка при добавлении поставки.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.SupplyController.Put(System.Int32,EnterpriseWarehouse.API.DTO.SupplyCreateDTO)">
            <summary>
            Обновляет информацию о существующей поставке.
            </summary>
            <param name="id">Идентификатор поставки.</param>
            <param name="newSupply">Объект <see cref="T:EnterpriseWarehouse.API.DTO.SupplyCreateDTO"/>, содержащий обновлённые данные поставки.</param>
            <returns>Объект <see cref="T:EnterpriseWarehouse.API.DTO.SupplyDTO"/>, представляющий обновлённую поставку.</returns>
            <response code="200">Поставка успешно обновлена.</response>
            <response code="404">Поставка с указанным идентификатором не найдена.</response>
        </member>
        <member name="M:EnterpriseWarehouse.API.Controllers.SupplyController.Delete(System.Int32)">
            <summary>
            Удаляет поставку по её идентификатору.
            </summary>
            <param name="id">Идентификатор поставки.</param>
            <returns>Результат операции удаления.</returns>
            <response code="200">Поставка успешно удалена.</response>
            <response code="404">Поставка с указанным идентификатором не найдена.</response>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.CellCreateDTO">
            <summary>
            DTO для создания ячейки
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.CellCreateDTO.ProductId">
            <summary>
            Идентификатор товара
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.CellCreateDTO.Quantity">
            <summary>
            Количество товара в ячейке
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.CellDTO">
            <summary>
            DTO ячейки
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.CellDTO.Id">
            <summary>
            Идентификатор ячейки
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.CellDTO.Product">
            <summary>
            Товар
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.CellDTO.Quantity">
            <summary>
            Количество товара в ячейке
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.OrganizationAreaDTO">
            <summary>
            DTO описывающее организацию и ее площадь
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationAreaDTO.Id">
            <summary>
            Идентификатор организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationAreaDTO.Name">
            <summary>
            Название организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationAreaDTO.Area">
            <summary>
            Расстояние до близжайшей организации
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.OrganizationCreateDTO">
            <summary>
            DTO для создания организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationCreateDTO.Name">
            <summary>
            Название
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationCreateDTO.Address">
            <summary>
            Адрес
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationCreateDTO.Geometry">
            <summary>
             Геометрия в виде полигона
             </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.OrganizationDistanceDTO">
            <summary>
            DTO описывающее близжайшую организацию и расстояние до неё
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationDistanceDTO.Name">
            <summary>
            Название организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationDistanceDTO.NearestOrganization">
            <summary>
            Название близжайшей организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationDistanceDTO.Distance">
            <summary>
            Расстояние до близжайшей организации
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.OrganizationDTO">
            <summary>
            DTO организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationDTO.Id">
            <summary>
            Идентификатор
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationDTO.Name">
            <summary>
            Название
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationDTO.Address">
            <summary>
            Адрес
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationDTO.Geometry">
            <summary>
             Геометрия в виде полигона
             </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.OrganizationMaxSuppliesDTO">
            <summary>
            DTO организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationMaxSuppliesDTO.Id">
            <summary>
            Идентификатор
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationMaxSuppliesDTO.Name">
            <summary>
            Название
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationMaxSuppliesDTO.Address">
            <summary>
            Адрес
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationMaxSuppliesDTO.Geometry">
            <summary>
             Геометрия в виде полигона
             </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationMaxSuppliesDTO.TotalQuantity">
            <summary>
            Количество полученной продукции
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.OrganizationRemoteDistanceDTO">
            <summary>
            DTO описывающее организацию и суммарное растояние до остальных организаций
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationRemoteDistanceDTO.Id">
            <summary>
            Идентификатор организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationRemoteDistanceDTO.Name">
            <summary>
            Название организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.OrganizationRemoteDistanceDTO.TotalDistance">
            <summary>
            Суммарное расстояние до остальных организаций
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.ProductCreateDTO">
            <summary>
            DTO для создания товара
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductCreateDTO.Code">
            <summary>
            Код товара
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductCreateDTO.Name">
            <summary>
            Название
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.ProductDTO">
            <summary>
            DTO для товара
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductDTO.Id">
            <summary>
            Идентификатор
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductDTO.Code">
            <summary>
            Код товара
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductDTO.Name">
            <summary>
            Название
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.ProductQuantityDTO">
            <summary>
            DTO описывающее продукт и его количество на складе
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductQuantityDTO.ProductName">
            <summary>
            Название товара
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductQuantityDTO.Quantity">
            <summary>
            Количество товара
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.ProductSupplyToOrganizationsDTO">
            <summary>
            DTO описывающее количество товара поставленного организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductSupplyToOrganizationsDTO.TotalQuantity">
            <summary>
            Количество товара
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductSupplyToOrganizationsDTO.ProductName">
            <summary>
            Название товара
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.ProductSupplyToOrganizationsDTO.OrganizationName">
            <summary>
            Название организации
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.SupplyCreateDTO">
            <summary>
            DTO для создания поставки
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.SupplyCreateDTO.ProductId">
            <summary>
            Идентификатор товара
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.SupplyCreateDTO.OrganizationId">
            <summary>
            Идентификатор организации
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.SupplyCreateDTO.SupplyDate">
            <summary>
            Дата поставки
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.SupplyCreateDTO.Quantity">
            <summary>
            Количество поставленного товара
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.DTO.SupplyDTO">
            <summary>
            DTO поставки
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.SupplyDTO.Id">
            <summary>
            Идентификатор
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.SupplyDTO.Product">
            <summary>
            Товар
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.SupplyDTO.Organization">
            <summary>
            Организация
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.SupplyDTO.SupplyDate">
            <summary>
            Дата поставки
            </summary>
        </member>
        <member name="P:EnterpriseWarehouse.API.DTO.SupplyDTO.Quantity">
            <summary>
            Количество поставленного товара
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.Services.IEntityService`2">
            <summary>
             Интерфейс для сервисов сущностей
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IEntityService`2.GetAll">
            <summary>
            Получение всех сущностей
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IEntityService`2.GetById(System.Int32)">
            <summary>
            Получение сущности при помощи id
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IEntityService`2.Add(`1)">
            <summary>
            Добавление сущности
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IEntityService`2.Delete(System.Int32)">
            <summary>
            Удаление сущности
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IEntityService`2.Update(System.Int32,`1)">
            <summary>
            Изменение сущности
            </summary>
        </member>
        <member name="T:EnterpriseWarehouse.API.Services.IQueryService">
            <summary>
            Интерфейс для запросов
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IQueryService.GetAllProductsSortedByName">
            <summary>
            Получить все товары отсортирванные по названию
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IQueryService.GetProductsRecieveOnDate(System.String,System.DateTime)">
            <summary>
            Получить сведения о продукции предприятия, полученной в указанный день получателем продукции
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IQueryService.GetCurrentWarehouseState">
            <summary>
            Получить состояние склада на текущий момент с указанием номеров ячеек склада и их содержимого
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IQueryService.GetMaxSuppliesOrganizations(System.DateTime,System.DateTime)">
            <summary>
            Получить информацию об организациях, получивших максимальный объем продукции за заданный период
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IQueryService.GetFiveMaxQuantityProducts">
            <summary>
            Получить топ 5 товаров по наличию на складе.
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IQueryService.GetQuantityProductSupplyToOrganiztions">
            <summary>
            Получить информацию о количестве поставленного товара по каждому товару и каждой организации
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IQueryService.GetNearestOrganizations">
            <summary>
            Получить информацию о близжайших организациях к каждой организации
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IQueryService.GetTop5OrganizationsByArea">
            <summary>
            Получить топ 5 организаций с наибольшей площадью
            </summary>
        </member>
        <member name="M:EnterpriseWarehouse.API.Services.IQueryService.GetMostRemoteOrganizations">
            <summary>
            Получить нформацию об организациях, наиболее удаленных от остальных организаций
            </summary>
        </member>
    </members>
</doc>
